---
title: "TD 2 - Exercice 10"
lang: fr
author: "Théo Leroy"
date: "8 octobre 2024"
format:
  live-html:
    code-background: true
    toc: true
    page-layout: full
webr:
  render-df: gt-interactive
  resources:
    - ./../data/ozone.txt
  packages:
      - dplyr
      - readr
      - ggplot2
      - cowplot
      - GGally
      - car
      - leaps
      - lmtest
editor: 
  markdown: 
    wrap: 72
---

{{< include ./../_extensions/r-wasm/live/_knitr.qmd >}}

## Question 1

On charge les données du fichier `ozone.txt` en R sous forme de
`data.frame`.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
data_ozone <- read.csv(
  file = "data/ozone.txt",
  header = TRUE,
  sep = " ",
  quote = '"',
  colClasses = c(
    "character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", "numeric", "factor", "factor"
  )
)
data_ozone$date <- as.Date(data_ozone$date, "%Y%m%d")
data_ozone$maxO3v <- c(NA, data_ozone$maxO3[1:(nrow(data_ozone)-1)])
data_ozone
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
data_ozone <- readr::read_delim(
  file = "data/ozone.txt",
  col_names = c(
    "date","maxO3","T9","T12","T15","Ne9","Ne12","Ne15",
    "Vx9","Vx12","Vx15","vent","pluie"
  ),
  col_types = readr::cols(
    readr::col_skip(),
    readr::col_date(format = "%Y%m%d"),
    readr::col_number(),
    readr::col_number(),
    readr::col_number(),
    readr::col_number(),
    readr::col_number(),
    readr::col_number(),
    readr::col_number(),
    readr::col_number(),
    readr::col_number(),
    readr::col_number(),
    readr::col_factor(),
    readr::col_factor()
  ),
  skip = 1,
  delim = " ",
  quote = '"'
)  |>
  dplyr::mutate(
    maxO3v = dplyr::lag(maxO3)
  )
data_ozone
```
:::

Le fichier chargé contient bien 122 observations avec les variables
`maxO3` pour la concentration maximale d’ozone mesurée chaque jour
(exprimée en mètre), `T9`, `T12`, `T15` pour les températures, `Ne9`,
`Ne12`, `Ne15` pour les nébulosités, `Vx9`, `Vx12`, `Vx15` pour la
vitesse du vent, `vent` pour la direction du vent et `pluie` pour le
niveau de pluie.

On ajoute également la concentration maximale d’ozone mesurée la veille
identifié comme variable pertinente. Elle est à la fois explicative et
corrige les problèmes d'autocorrélation des résidus.

On effectue la régression
$$\texttt{maxO3}_i = \beta_1+\beta_2\texttt{T12}_i+\beta_3\texttt{Ne9}_i+\beta_4\texttt{Vx9}_i+\beta_5\texttt{maxO3v}_i+\varepsilon_i$$
à l'aide de la fonction `lm` disponible nativement dans
{{< iconify logos:r-lang >}}. On cherche ainsi une estimation du vecteur
$\beta$ à l'aide de la méthode des moindres carrés ordinaires (MCO).

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
fit_q1 <- lm(formula = maxO3 ~T12 + Ne9 + Vx9 + maxO3v, data = data_ozone)
summary(fit_q1)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
fit_q1 <- lm(formula = maxO3 ~T12 + Ne9 + Vx9 + maxO3v, data = data_ozone)
summary(fit_q1)
```
:::

## Question 2

On peut faire une boite à moustaches de la variable `maxO3` selon les
modalités de pluie. On peut également représenter les distributions de
`maxO3` par groupe (Sec/Pluie) avec des histogrammes.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
# Boxplot
boxplot(
  maxO3 ~ pluie,
  data = data_ozone,
  main = "Distribution de la quantité d'ozone selon le niveau de pluie",
  col = c(
    adjustcolor("powderblue", alpha.f = 0.7),
    adjustcolor("pink", alpha.f = 0.7)
    
  )
)

# Histogramme
hist(
  data_ozone[data_ozone$pluie == "Sec", "maxO3"],
  main = "Distribution de la quantité d'ozone selon le niveau de pluie",
  xlab = "maxO3",
  ylab = "Fréquence",
  col = adjustcolor("pink", alpha.f = 0.7),
  xlim = c(40, 170),
  ylim = c(0, 15)
)
hist(
  data_ozone[data_ozone$pluie == "Pluie", "maxO3"],
  col = adjustcolor("powderblue", alpha.f = 0.7),
  add = TRUE
)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
# Boxplot
ggplot2::ggplot(
  data = subset(data_ozone, !is.na(pluie) & !is.na(maxO3)),
  mapping = ggplot2::aes(x = pluie, y = maxO3, fill = pluie)
) +
  ggplot2::geom_boxplot(alpha = 0.7) +
  ggplot2::scale_fill_manual(values = c("Pluie"="powderblue", "Sec"="pink")) +
  ggplot2::labs(
    title = "Distribution de la quantité d'ozone selon le niveau de pluie",
    x = "Niveau de pluie",
    y = "Quantité d'ozone"
  ) +
  ggplot2::theme_minimal()

# Histogramme
ggplot2::ggplot(
  data = subset(data_ozone, !is.na(pluie) & !is.na(maxO3)),
  mapping = ggplot2::aes(x = maxO3, fill = pluie, colour = pluie)
) +
  ggplot2::geom_histogram(binwidth = 10, alpha = 0.7) +
  ggplot2::scale_fill_manual(values = c("Pluie"="powderblue", "Sec"="pink")) +
  ggplot2::scale_colour_manual(values = c("Pluie"="powderblue", "Sec"="pink")) +
  ggplot2::labs(
    title = "Distribution de la quantité d'ozone selon le niveau de pluie",
    x = "maxO3",
    y = "Fréquence"
  ) +
  ggplot2::theme_minimal()
```
:::

Graphiquement, on constate un lien. La quantité maximale d'ozone sur une
journée (`maxO3`) est moindre lorsque le temps est pluvieux.

Afin de confirmer cette analyse graphique on pourrait effectuer un test
de Student d'égalité des moyennes dans deux groupes (slide 27 du cours)
sous l'hypothèse que la distribution de `maxO3` est gaussienne et de
même variance $\sigma^2$ dans chaque groupe. Toutefois l’égalité des
variances ici ne semble pas vraiment vérifiée ici au vu des boxplots. On
peut d'ailleurs tester cette égalité des variances avec le test de
Levene ou le test de Bartlett (slide 146).

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
car::leveneTest(maxO3 ~ pluie, data = data_ozone)
bartlett.test(maxO3 ~ pluie, data = data_ozone)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
cat("Test de Levene\n")
car::leveneTest(maxO3 ~ pluie, data = data_ozone)
cat("Test de Bartlett\n")
bartlett.test(maxO3 ~ pluie, data = data_ozone)
```
:::

L'hypothèse nulle d'égalité des variance est rejetée pour ces deux tests
au niveau $\alpha=0.05$ car les p-valeurs sont bien inférieures à
$\alpha$.

On peut alors effectuer un test de Welch qui est une adapatation du test
de Student lorsque les deux populations ont des variances différentes.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
t.test(maxO3 ~ pluie, data = data_ozone, var.equal = FALSE)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
t.test(maxO3 ~ pluie, data = data_ozone, var.equal = FALSE)
```
:::

On rejette l'hypothèse nulle du test de Welch : les moyennes de la
variable `maxO3` diffèrent entre les journées avec et sans pluie.

## Question 3

On ajoute la variable `pluie` en incluant l'effet sur la constante et
les interactions avec les variables continues initiales (`T12`, `Ne9`,
`Vx9` et `maxO3v`).

En prenant la modalité $\texttt{Pluie}$ comme référence, le modèle peut
s'écrire alors

$$
\begin{align*}
\texttt{maxO3}_i &= 
\beta_1+
\beta_2{\mathbb{1}_{\texttt{pluie}=\texttt{Sec}}}_i \\ &+ 
\beta_3\texttt{T12}_i+
\beta_4{\mathbb{1}_{\texttt{pluie}=\texttt{Sec}}}_i\texttt{T12}_i \\ &+
\beta_5\texttt{Ne9}_i+
\beta_6{\mathbb{1}_{\texttt{pluie}=\texttt{Sec}}}_i\texttt{Ne9}_i \\ &+
\beta_7\texttt{Vx9}_i+
\beta_8{\mathbb{1}_{\texttt{pluie}=\texttt{Sec}}}_i\texttt{Vx9}_i \\ &+
\beta_9\texttt{maxO3v}_i+
\beta_{10}{\mathbb{1}_{\texttt{pluie}=\texttt{Sec}}}_i\texttt{maxO3v}_i \\ &+
\varepsilon_i
\end{align*}
$$

ou de manière équivalente

$$
\texttt{maxO3}_i =\begin{cases}
\beta_1+
\beta_3\texttt{T12}_i+
\beta_5\texttt{Ne9}_i+
\beta_7\texttt{Vx9}_i+
\beta_9\texttt{maxO3v}_i+
\varepsilon_i \ \textrm{si} \ {\mathbb{1}_{\texttt{pluie}=\texttt{Sec}}}_i = 0 \\
(\beta_1+\beta_2)+
(\beta_3+\beta_4)\texttt{T12}_i+
(\beta_5+\beta_6)\texttt{Ne9}_i+
(\beta_7+\beta_8)\texttt{Vx9}_i+
(\beta_9+\beta_{10})\texttt{maxO3v}_i+
\varepsilon_i \ \textrm{si} \ {\mathbb{1}_{\texttt{pluie}=\texttt{Sec}}}_i = 1 \\
\end{cases}
$$

On ajuste ce modèle avec la fonction `lm` par défaut R va considérer la
première modalité (dans l'ordre alphabétique) de la variable `pluie`
comme référence pour rendre le modèle identifiable (c'est à dire
`pluie=Pluie` comme nous venons de l'écrire).

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
fit_q3 <- lm(formula = maxO3 ~ pluie + T12 + T12:pluie + Ne9 + Ne9:pluie + Vx9 + Vx9:pluie + maxO3v + maxO3v:pluie, data = data_ozone)
# Alternative plus concise
# fit_q3 <- lm(formula = (maxO3 ~T12 + Ne9 + Vx9 + maxO3v)*pluie, data = data_ozone)
summary(fit_q3)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
fit_q3 <- lm(formula = maxO3 ~ pluie + T12 + T12*pluie + Ne9 + Ne9*pluie + Vx9 + Vx9*pluie + maxO3v + maxO3v*pluie, data = data_ozone)
# Alternative plus concise
# fit_q3 <- lm(formula = (maxO3 ~T12 + Ne9 + Vx9 + maxO3v)*pluie, data = data_ozone)
summary(fit_q3)
```
:::

On constate qu'il n'y a pas beaucoup de coefficients significatifs. On
peut suspecter des problèmes de multicolinéarité.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
car::vif(fit_q3)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
car::vif(fit_q3)
```
:::

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
anova(fit_q1, fit_q3)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
anova(fit_q1, fit_q3)
```
:::

La p-value élevée (0.7367) confirme que l’on peut accepter les
contraintes, et donc privilégier le modèle initial sans pluie, ni les
interactions associées.

## Question 4

En prenant la modalité $\texttt{Pluie}$ comme référence, le modèle peut
s'écrire alors

$$
\begin{align*}
\texttt{maxO3}_i &= 
\beta_1+
\beta_2{\mathbb{1}_{\texttt{pluie}=\texttt{Sec}}}_i + 
\beta_3\texttt{T12}_i+
\beta_4\texttt{Ne9}_i+
\beta_5\texttt{Vx9}_i+
\beta_6\texttt{maxO3v}_i+
\varepsilon_i
\end{align*}
$$

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
fit_q4 <- lm(formula = maxO3 ~ pluie + T12 + Ne9  + Vx9 +  + maxO3v , data = data_ozone)
summary(fit_q4)
anova(fit_q1, fit_q4)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
fit_q4 <- lm(formula = maxO3 ~ pluie + T12 + Ne9  + Vx9 + maxO3v, data = data_ozone)
summary(fit_q4)
anova(fit_q1, fit_q4)
```
:::

Le résultat du modèle montre que le coefficient de la variable pluie
pour la condition "Sec" n'est pas significativement différent de celui
pour "Pluie" (le coefficient estimé représente leur différence et n'est
pas significatif). De plus, le test de comparaison avec le modèle
initial confirme que la variable pluie n’apporte pas d’information
utile. Ce constat peut sembler surprenant par rapport à la question 2,
mais il n’y a pas de contradiction : l’effet de la pluie est absorbé par
les autres variables (température, nébulosité, vitesse du vent). Une
fois ces variables intégrées, la présence ou non de pluie ne fournit
aucune information supplémentaire. En revanche, si ces variables ne sont
pas prises en compte, l’effet de la pluie devient très perceptible (voir
question 2), ce qui en fait un facteur de confusion.

## Question 5

On trace les boxplots selon les modalités de la variables vent.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
# Boxplot
boxplot(
  maxO3 ~ vent,
  data = data_ozone,
  main = "Distribution de la quantité d'ozone selon la direction du vent"
)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
# Boxplot
ggplot2::ggplot(
  data = subset(data_ozone, !is.na(vent) & !is.na(maxO3)),
  mapping = ggplot2::aes(x = pluie, y = maxO3, fill = pluie)
) +
  ggplot2::geom_boxplot(alpha = 0.7) +
  ggplot2::labs(
    title = "Distribution de la quantité d'ozone selon la direction du vent",
    x = "Direction du vent",
    y = "Quantité d'ozone"
  ) +
  ggplot2::theme_minimal()
```
:::

Un test de Student n'est pas approprié ici, car il y a quatre modalités.
Nous effectuons donc un test ANOVA pour déterminer si les moyennes de
maxO3 diffèrent significativement selon les directions du vent. Avant
cela, il est nécessaire de vérifier l'égalité des variances, une
hypothèse essentielle pour l'ANOVA.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
car::leveneTest(maxO3 ~ vent, data = data_ozone)
bartlett.test(maxO3 ~ vent, data = data_ozone)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
car::leveneTest(maxO3 ~ vent, data = data_ozone)
bartlett.test(maxO3 ~ vent, data = data_ozone)
```
:::

L'égalité des variances est confirmée dans ces deux tests. On peut
réaliser le test ANOVA.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
anova(lm(maxO3 ~ vent, data = data_ozone))
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
anova(lm(maxO3 ~ vent, data = data_ozone))
```
:::

La non-égalité des moyennes selon les directions de vent est
significative.

On lance à présent le modèle de régression avec vent et toutes les
interactions possibles.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
fit_q5 <- lm(formula = maxO3 ~ (T12 + Ne9 + Vx9 + maxO3v)*vent, data = data_ozone)
summary(fit_q5)
anova(fit_q1, fit_q5)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
fit_q5 <- lm(formula = maxO3 ~ (T12 + Ne9 + Vx9 + maxO3v)*vent, data = data_ozone)
summary(fit_q5)
anova(fit_q1, fit_q5)
```
:::

Les conclusions sont similaires à celles obtenues avec la variable pluie : il ne paraît pas pertinent d’ajouter la variable `vent` ni les interactions associées dans le modèle.
