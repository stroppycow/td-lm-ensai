---
title: "TD 2 - Exercice 7 - Modélisation de la concentration maximale journalière en ozone"
lang: fr
author: "Théo Leroy"
date: "10 octobre 2025"
format:
  live-html:
    code-background: true
    toc: true
    page-layout: full
webr:
  render-df: gt-interactive
  resources:
    - ./../data/ozone.txt
  packages:
      - dplyr
      - readr
      - ggplot2
      - cowplot
      - GGally
      - car
      - leaps
      - lmtest
editor: 
  mode: source
  markdown: 
    wrap: 72
fig-align: center
filters: 
  - diagram
  - custom-callout
custom-callout:    
  answer:
    color: "#CCCCCC"
    appearance: "minimal"
    title: ""
---

{{< include ./../_extensions/r-wasm/live/_knitr.qmd >}}


Le jeu de données `ozone.txt` contient la concentration maximale d’ozone (`maxO3`)
mesurée chaque jour de l’été 2001 à Rennes. Il contient également les températures, la nébulosité et la vitesse du vent mesurés à 9h, 12h et 15h (respectivement `T9`, `T12`, `T15`, `Ne9`, `Ne12`, `Ne15` et `Vx9`, `Vx12`, `Vx15`), ainsi que la direction principale du vent et la présence ou non de pluie. On désire expliquer au mieux la concentration d’ozone à l’aide des variables disponibles dans le jeu de données.

## Question 1

Analyser le nuage de points et la corrélation linéaire entre `maxO3` et chacune des variables quantitatives disponibles (c’est à dire `T9`, `T12`, `T15`, `Ne9`, `Ne12`, `Ne15`, `Vx9`, `Vx12` et `Vx15`). Est-il raisonnable de supposer qu’il existe un lien linéaire entre `maxO3` et ces variables ?

::: answer

On charge les données du fichier `ozone.txt` en R sous forme de
`data.frame`.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
data_ozone <- read.csv(
  file = "data/ozone.txt",
  header = TRUE,
  sep = " ",
  quote = '"'
)
data_ozone
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
data_ozone <- readr::read_delim(
  file = "data/ozone.txt",
  col_types = "_cnnnnnnnnnncc",
  col_names = c(
    "date","maxO3","T9","T12","T15","Ne9","Ne12","Ne15",
    "Vx9","Vx12","Vx15","vent","pluie"
  ),
  skip = 1,
  delim = " ",
  quote = '"'
)
data_ozone
```
:::

Le fichier chargé contient bien 122 observations avec les variables
`maxO3` pour la concentration maximale d’ozone mesurée chaque jour
(exprimée en mètre), `T9`, `T12`, `T15` pour les températures, `Ne9`,
`Ne12`, `Ne15` pour les nébulosités et `Vx9`, `Vx12`, `Vx15` pour la
vitesse du vent.

On représente ces données dans des plans ou l'axe des ordonnées est
toujours `maxO3` : la variable à expliquer.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
#| fig-align: center
#| fig-height: 8
par(mfrow = c(3,3), mar = c(4,4,1,1))
lapply(
  X = c("T9", "T12", "T15", "Ne9", "Ne12", "Ne15", "Vx9", "Vx12", "Vx15"),
  FUN = function(nom_var_x){
    plot(
      x = data_ozone[[nom_var_x]],
      y = data_ozone[["maxO3"]],
      type ="p",
      xlab = nom_var_x,
      ylab = "maxO3",
      pch = 3
    )
    grid()
  }
) |> invisible()
cor(
  x = data_ozone$maxO3,
  y = data_ozone[,c("T9", "T12", "T15", "Ne9", "Ne12", "Ne15", "Vx9", "Vx12", "Vx15")],
  use = "complete.obs"
)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
#| fig-align: center
#| fig-height: 8
plots <- lapply(
  X = c("T9", "T12", "T15", "Ne9", "Ne12", "Ne15", "Vx9", "Vx12", "Vx15"),
  FUN = function(nom_var_x){
   ggplot2::ggplot(
      data = data_ozone,
      mapping = ggplot2::aes(x = .data[[nom_var_x]], y = maxO3)
    ) +
    ggplot2::labs(x = nom_var_x, y = "maxO3") + 
    ggplot2::geom_point(na.rm = TRUE)
  }
) 
cowplot::plot_grid(plotlist = plots)
```
:::

On observe une relation linéaire croissante assez prononcée avec `T9`,
`T12` et `T15`, une légère relation décroissante avec `Ne9`, `Ne12` et
`Ne15`, ainsi qu'une faible relation linéaire avec `Vx9`, `Vx12` et
`Vx15`. Aucun lien non-linéaire ne semble ressortir de manière évidente.

:::

## Question 2

::: answer

On effectue la régression
$$\texttt{maxO3}_i = \beta_1+\beta_2\texttt{T9}_i+\beta_3\texttt{T12}_i+\beta_4\texttt{T15}_i+\beta_5\texttt{Ne9}_i+\beta_6\texttt{Ne12}_i+\beta_7\texttt{Ne15}_i+\beta_8\texttt{Vx9}_i+\beta_9\texttt{Vx12}_i+\beta_{10}\texttt{Vx15}_i+\varepsilon_i$$
à l'aide de la fonction `lm` disponible nativement dans
{{< iconify logos:r-lang >}}. On cherche ainsi une estimation du vecteur
$\beta$ à l'aide de la méthode des moindres carrés ordinaires (MCO).

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q2 <- lm(
  maxO3 ~ T9 + T12 + T15 + Ne9 + Ne12 + Ne15 + Vx9 + Vx12 + Vx15,
  data = data_ozone
)
summary(modele_q2)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q2 <- lm(
  maxO3 ~ T9 + T12 + T15 + Ne9 + Ne12 + Ne15 + Vx9 + Vx12 + Vx15,
  data = data_ozone
)
summary(modele_q2)
```
:::

Les résultats de cette estimations sont assez peut cohérents avec les
intuitions de la question 1. Selon le test de significativité de
Student, aucune variable ne semble significative dans ce modèle, à
l'exception peut-être de `Vx9` au seuil $\alpha =0,05$. Ces résultats
sont assez surprenants, surtout compte tenu des nuages de points
observés précédemment. En particulier,`Vx9` ne semblait pas être la
variable la plus pertinente pour expliquer `maxO3`.

Par ailleurs le test de significativité globale de Fisher (dernière
ligne de la sortie) donne une p-value bien inférieure à $0,05$ donc on
rejette l'hypothèse nulle $H_0: \ \beta_2 = \dots =  \beta_{10}=0$. Ce
issue du test de Fisher semble également entrer en contradiction avec
les tests de Student précédents.

Le phénomène observé est dû au problème de multicolinéarité : certaines
variables explicatives sont très corrélées, on peut l'observer
graphiquement.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
pairs(
  x = data_ozone[,c("T9", "T12", "T15")],
  main = "Matrice des nuages de points sur les températures"
)

pairs(
  x = data_ozone[,c("Ne9", "Ne12", "Ne15")],
  main = "Matrice des nuages de points sur les nébuloistés"
)

pairs(
  x = data_ozone[,c("Vx9", "Vx12", "Vx15")],
  main = "Matrice des nuages de points sur les vitesses du vent"
)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
#| timelimit: 60
GGally::ggpairs(
    data = {data_ozone |> dplyr::filter(!is.na(T9) & !is.na(T12) & !is.na(T15))},
    columns  = c("T9", "T12", "T15"),
    title = "Matrice des nuages de points sur les températures",
    upper = list(continuous = "cor"),
    diag = NULL
)
GGally::ggpairs(
    data = {data_ozone |> dplyr::filter(!is.na(Ne9) & !is.na(Ne12) & !is.na(Ne15))},
    columns  = c("Ne9", "Ne12", "Ne15"),
    title = "Matrice des nuages de points sur les nébuloistés",
    upper = list(continuous = "cor"),
    diag = NULL
)
GGally::ggpairs(
    data = {data_ozone |> dplyr::filter(!is.na(Vx9) & !is.na(Vx12) & !is.na(Vx15))},
    columns  = c("Vx9", "Vx12", "Vx15"),
    title = "Matrice des nuages de points sur les vitesses du vent",
    upper = list(continuous = "cor"),
    diag = NULL
)
```
:::

Comme la multicolinéarité n'est pas parfaite $X^{\prime} X$, reste
inversible mais a une inverse qui prend de très grandes valeurs. La
conséquence est que la variance des estimateurs est très grande (puisque
$\mathbb{V}(\hat{\beta})=\sigma^2\left(X^{\prime} X\right)^{-1}$ ).
Autrement dit, il y a une grande incertitude concernant l'estimation de
chaque coefficient. Ainsi lors du test de Student, l'hypothèse
$H_0: \beta_j=0$ est plausible et n'est pas rejetée. Il faut donc régler
ce problème de multicolinéarité.

:::

## Question 3

On peut détecter cette multicolinéarité à l'aide du VIF (Variance
Inflation Factor) pour chacune des variables explicatives du modèle
précédent.

Le VIF pour la variable $X^{(j)}$ vaut $$
VIF_j=\frac{1}{1-R_j^2}
$$ où $R_j^2$ est le $R^2$ dans la régression de $X^{(j)}$ par rapport
aux autres variables explicatives

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
car::vif(modele_q2)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
#| timelimit: 60
car::vif(modele_q2)
```
:::

Certaines valeurs sont élevées (un premier seuil d’alerte est
généralement 5), ce qui confirme qu’il y a un problème de
multicolinéarité entre certaines variables et donc que les tests de
Student ne sont pas rejetés.

## Question 4

On peut retenir, une variable parmi chaque groupe (température,
nébulosité et vitesse du vente). On peut sélectionner par exemple celle
qui est le plus correlée avec la variable `maxO3` à chaque fois.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
cor(data_ozone[,
  c("maxO3", "T9", "T12", "T15", "Ne9", "Ne12", "Ne15", "Vx9", "Vx12", "Vx15")
], use = "complete.obs")
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
#| timelimit: 60
data_ozone |>
  dplyr::select(maxO3, T9, T12, T15, Ne9, Ne12, Ne15, Vx9, Vx12, Vx15) |>
  cor(use = "complete.obs")
```
:::

On retient alors `T12`, `Ne12` et `Vx9`.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q4 <- lm(
  maxO3 ~ T12 + Ne12 + Vx9,
  data = data_ozone
)
summary(modele_q4)
car::vif(modele_q4)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
#| timelimit: 60
modele_q4 <- lm(
  maxO3 ~ T12 + Ne12 + Vx9,
  data = data_ozone
)
summary(modele_q4)
car::vif(modele_q4)
```
:::

Pour commencer, l'analyse des VIF montre que ce modèle n'est plus
affecté par la multicolinéarité. En outre, les variables sélectionnées
sont significatives, à l'exception de `Ne12`, qui est à la limite. Il
serait possible d'affiner davantage le modèle, mais il est pertinent de
comparer les valeurs de $R^2$ et $R_a^2$ avec celles du modèle global
présenté précédemment. Comme attendu, le $R^2$ est plus faible, car il
tend à diminuer lorsqu'on retire des variables, même si celles-ci ne
sont pas significatives. Toutefois, il est plus pertinent de se
concentrer sur le $R_a^2$ : celui-ci reste similaire entre le
sous-modèle (0.6612) et le modèle global (0.6633), ce qui valide notre
approche. Nous n'avons pas perdu vraiment d'information $67\  \%$ de la
variance reste expliquée par le modèle.

## Question 5

Pour rappel, le BIC est un critère de sélection de modèle. En régression
linéaire multiple, on a :

$$\textrm{BIC}=n \ln\left( \frac{S C R}{n}\right)+(p+1) \ln(n)$$

**Recherche exhaustive (à privilégier quand le nombre de variable est
restreint)**

La fonction `regsubsets` du package `leaps` permet de calculer toutes
les combinaisons de modèle posible. Appliquer la fonction `plot` permet
ensuite de visualiser le résultat.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
res_regsubset <- leaps::regsubsets(
  maxO3 ~ T9 + T12 + T15 + Ne9 + Ne12 + Ne15 + Vx9 + Vx12 + Vx15,
  data = data_ozone,
  nvmax = 9L
)
plot(res_regsubset)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
res_regsubset <- leaps::regsubsets(
  maxO3 ~ T9 + T12 + T15 + Ne9 + Ne12 + Ne15 + Vx9 + Vx12 + Vx15,
  data = data_ozone,
  nvmax = 9L
)
plot(res_regsubset)
```
:::

Cette sortie présente le meilleur modèle à 1 variable, le meilleur
modèle à 2 variables,... en les classant du pire (en bas) au meilleur
(en haut), selon le critère BIC. Les variables sélectionnées dans chaque
modèle sont grisées. Si on se réfère à cette sélection, on choisirait
donc le modèle avec les variables `T12`, `Ne9` et `Vx9` (ce choix est
donc différent du modèle que l’on avait retenu de façon naive ci-dessus)

**Recherche pas à pas (à privilégier quand il y a beaucoup de
variables)**

La fonction `step` permet de sélectionner un modèle pas à pas. Il existe
plusieurs types (backward, forward, hybride). Contrairement à la
procédure exhaustive, les procédures pas à pas ne parcourent pas tous
les sous-modèles possibles. Ils peuvent donc éventuellement "rater" le
meilleur modèle.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
#BIC backward
cat("BIC backward\n")
step(
  object = modele_q2,
  k = log(nobs(modele_q2)),
  direction = "backward"
)

#BIC forward
cat("BIC forward\n")
step(
  object = lm(maxO3 ~ 1, data = data_ozone),
  scope = formula(modele_q2),
  k = log(nobs(modele_q2)),
  direction = "forward"
)

#BIC forward hybride
cat("BIC forward hybride\n")
step(
  object = lm(maxO3 ~ 1, data = data_ozone),
  scope = formula(modele_q2),
  k = log(nobs(modele_q2)),
  direction = "both"
)

#BIC backward hybride
cat("BIC backward hybride\n")
step(
  object = modele_q2,
  k = log(nobs(modele_q2)),
  direction = "both"
)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
#BIC backward
cat("BIC backward\n")
step(
  object = modele_q2,
  k = log(nobs(modele_q2)),
  direction = "backward"
)

#BIC forward
cat("BIC forward\n")
step(
  object = lm(maxO3 ~ 1, data = data_ozone),
  scope = formula(modele_q2),
  k = log(nobs(modele_q2)),
  direction = "forward"
)

#BIC forward hybride
cat("BIC forward hybride\n")
step(
  object = lm(maxO3 ~ 1, data = data_ozone),
  scope = formula(modele_q2),
  k = log(nobs(modele_q2)),
  direction = "both"
)

#BIC backward hybride
cat("BIC backward hybride\n")
step(
  object = modele_q2,
  k = log(nobs(modele_q2)),
  direction = "both"
)
```
:::

Avec ces quatre méthodes pas à pas sur le critère BIC, on retrouve les
mêmes résultats que précédemment avec la recherche exhaustive.

On retient le modèle :

$$\texttt{maxO3}_i = \beta_1+\beta_2\texttt{T12}_i+\beta_3\texttt{Ne9}_i+\beta_4\texttt{Vx9}_i+\varepsilon_i$$

## Question 6

Pour la méthode exhaustive, il est possible d'afficher le classement
selon d'autres critères en ajustant l'option `scale`de la fonction
`regsubsets`.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
plot(res_regsubset, scale = "adjr2")
plot(res_regsubset, scale = "Cp")
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
plot(res_regsubset, scale = "adjr2")
plot(res_regsubset, scale = "Cp")
```
:::

Le résultat est identique avec les $R^2$ ajustés et les $C_p$ de Mallows
mais l'issue est différente par rapport à la question précédente avec le
critère BIC. On retiendrait aussi la variable $\texttt{T9}$. Comme elle
est très corrélée à la variable $\texttt{T12}$, il semble raisonnable de
prendre plutôt le modèle obtenu à la question 5, plus parcimonieux.

## Question 7

**Analyse graphique des résidus**

On analyse les résidus graphiquement avec la fonction `plot`.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
modele_q5 <- lm(formula  = maxO3 ~T12 + Ne9 + Vx9, data = data_ozone) 
par(mfrow= c(2, 2))
plot(modele_q5)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q5 <- lm(formula  = maxO3 ~ T12 + Ne9 + Vx9, data = data_ozone)
par(mfrow= c(2, 2))
plot(modele_q5)
```
:::

Un examen graphique des résidus révèle une distribution aléatoire
satisfaisante car

-   aucune structure ni hétéroscédasticité n'est apparente (graphique en
    haut à droite des résidus et valeurs ajustées) ;
-   compatible avec une loi normale, bien que cela importe peu compte
    tenu du nombre d’observations (graphique en haut à droite - QQ plot)
    ;
-   aucun individu atypique n'est détecté (graphique en bas à droite -
    distances de Cook)

**Test d’homoscédasticité des résidus**

::: callout-note
### Test de Breusch-Pagan

Le test de Breusch-Pagan permet de tester l’homoscédasticité. Il
s'implémente sous R avec la fonction `bptest` de la librairie `lmtest`.

On suppose que $\varepsilon_i$ a une variance
$\sigma_i^2=\sigma^2+z_i'\gamma$

-   $z_i$ est un vecteur de $k$ variables à choisir qui pourraient
    expliquer l'hétéroscédasticité (si elle est présente)
-   $\gamma$ est un paramètre inconnu, de dimension $k$, à estimer.

Par défaut sous R : $z_i$ est simplement le vecteur des variables
explicatives $\left(X_i^{(1)}, \ldots, X_i^{(p)}\right)$, et donc $k=p$.
Mais on peut proposer autre chose.

Le test de Breusch-Pagan consiste à tester $$
H_0: \gamma=0 \quad \text { contre } \quad H_1: \gamma \neq 0 .
$$
:::

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
lmtest::bptest(modele_q5)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
lmtest::bptest(modele_q5)
```
:::

On ne rejette pas $H_0$ au seuil 5 %. L'homoscédasticité est vérifiée.

**Test de non-corrélation des résidus**

::: callout-note
### Tests de Durbin-Watson et Breusch-Godfrey

Le tests de Durbin-Watson et Breusch-Godfrey permettent de tester la non
corrélation des résidus. Ils s'implémentent sous R avec la fonction
`dwtest` et `bgtest` de la librairie `lmtest`.

On suppose que $\varepsilon_i$ sont auto-corrélées à l'ordre $r$, i.e.

$$\varepsilon_i = \rho_1\varepsilon_{i-1}+\dots+\rho_r\varepsilon_{i-r}+\eta_i$$
où les $\eta_i$ sont $\texttt{iid}$ suivant une
$\mathcal{N}\left(0, \sigma^2\right)$.

**Test de Durbin-Watson** : il ne concerne que le cas $r=1$ et teste $$
H_0: \rho_1=0 \quad \text { contre } \quad H_1: \rho_1 \neq 0 .
$$ **Test de Breusch-Godfrey** : il teste (différemment),

$$
H_0: \rho_1= \dots = \rho_r = 0 \quad \text { contre } \quad H_1: \textrm{le contraire}
$$
:::

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
lmtest::dwtest(modele_q5)
lmtest::bgtest(modele_q5)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
lmtest::dwtest(modele_q5)
lmtest::bgtest(modele_q5)
```
:::

Dans les deux cas on rejette $H_0$ au seuil 5 %. Il semble donc exister
une auto-corrélation dans les résidus, ce qui n’est pas surprenant
puisque la variable d’intérêt, $\texttt{maxO3}$, est temporelle : la
valeur d'un jour donné est liée à celle de la veille, et cela se
manifeste dans les résidus du modèle. Cette observation indique que
l’hypothèse usuelle $\mathbb{V}(\varepsilon)=\sigma^2I_n$ n'est pas
respectée ici. Bien qu'on puisse voir cela comme une contrainte, c’est
en réalité une occasion d'améliorer le modèle initial : la corrélation
temporelle n'a pas été prise en compte, offrant ainsi un levier pour
enrichir notre modélisation en intégrant cette dépendance.

## Question 8

On peut créer une variable retard $\texttt{maxO3v}$ correspondant au
maximum d'ozone de la veille.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
data_ozone_q8 <- data_ozone
data_ozone_q8$maxO3v <- c(NA, data_ozone$maxO3[1:(nrow(data_ozone)-1)])
plot(data_ozone_q8$maxO3v, data_ozone_q8$maxO3)
cor(data_ozone_q8$maxO3, data_ozone_q8$maxO3v, use='pairwise.complete.obs')
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
data_ozone_q8 <- data_ozone |>
  dplyr::mutate(
    maxO3v = dplyr::lag(maxO3)
  )
ggplot2::ggplot(
  data = data_ozone_q8,
  mapping = ggplot2::aes(x = maxO3, y = maxO3v)
) + geom_point()
cor(data_ozone_q8$maxO3, data_ozone_q8$maxO3v, use = 'pairwise.complete.obs')
```
:::

Le nuage de points et la corrélation linéaire confirment l'existence
d'un lien linéaire fort entre $\texttt{maxO3}$ et sa valeur de la
veille.

## Question 9

On ajoute la covariable `maxO3v` au modèle de la question 5.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
modele_q9 <- lm(formula  = maxO3 ~ T12 + Ne9 + Vx9 + maxO3v, data = data_ozone_q8)
summary(modele_q9)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q9 <- lm(formula  = maxO3 ~ T12 + Ne9 + Vx9 + maxO3v, data = data_ozone_q8)
summary(modele_q9)
```
:::

On constate que toutes les variables sont significatives. On effectue
l’analyse des résidus.

**Analyse graphique des résidus**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
par(mfrow= c(2, 2))
plot(modele_q9)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
plot(modele_q9)
```
:::

Un examen graphique des résidus révèle une distribution aléatoire
satisfaisante car

-   aucune structure ni hétéroscédasticité n'est apparente (graphique en
    haut à droite des résidus et valeurs ajustées) ;
-   compatible avec une loi normale, bien que cela importe peu compte
    tenu du nombre d’observations (graphique en haut à droite - QQ plot)
    ;
-   aucun individu atypique n'est détecté (graphique en bas à droite -
    distances de Cook)

**Test d’homoscédasticité des résidus**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
lmtest::bptest(modele_q5)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
lmtest::bptest(modele_q9)
```
:::

On ne rejette pas $H_0$ au seuil 5 %. L'homoscédasticité est confirmée.

**Test de non-corrélation des résidus**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
lmtest::dwtest(modele_q9)
lmtest::bgtest(modele_q9)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
lmtest::dwtest(modele_q9)
lmtest::bgtest(modele_q9)
```
:::

On ne rejette pas $H_0$ au seuil 5 % dans les deux cas. L'absence
d'autocorrélation est confirmée.

## Question 10

**Test de Fisher sur des modèles emboités**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
car::linearHypothesis(
  modele_q9,
  matrix(c(0, 0, 0, 0, 1), nrow = 1, byrow = TRUE)
)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
car::linearHypothesis(
  modele_q9,
  matrix(c(0, 0, 0, 0, 1), nrow = 1, byrow = TRUE)
)
```
:::

Le test de Fisher sur les modèle emboité confirme la significativité de
la variable `maxO3v`.

**Critères de sélection**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: tdv
#| autorun: true
cp_mallows <- function(lm_model, lm_full) {
  # Nombre d'observations
  n <- length(residuals(lm_model))
  
  # Nombre de paramètres (y compris l'intercept)
  p <- length(coef(lm_model))
  
  # Somme des carrés des résidus
  RSS <- sum(residuals(lm_model)**2)
  
  # Estimation de la variance des erreurs à partir du modèle complet
  sigma_hat2 <- summary(lm_full)$sigma**2
  
  # Calcul de Cp de Mallows
  Cp <- RSS / sigma_hat2 - (n - 2 * p)
  
  return(Cp)
}
modele_full <- lm(
  maxO3 ~ T9 + T12 + T15 + Ne9 + Ne12 + Ne15 + Vx9 + Vx12 + Vx15 + maxO3v,
  data = data_ozone_q8
)
data.frame(
  `Critère` = c("AIC", "BIC", "Cp de Mallows", "R²-adj"),
  `Modèle Q5` = c(
    AIC(modele_q5),
    BIC(modele_q5),
    cp_mallows(modele_q5,modele_full),
    summary(modele_q5)$adj.r.squared
  ),
  `Modèle Q9` = c(
    AIC(modele_q9),
    BIC(modele_q9),
    cp_mallows(modele_q9, modele_full),
    summary(modele_q9)$adj.r.squared
  )
)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
cp_mallows <- function(lm_model, lm_full) {
  # Nombre d'observations
  n <- length(residuals(lm_model))
  
  # Nombre de paramètres (y compris l'intercept)
  p <- length(coef(lm_model))
  
  # Somme des carrés des résidus
  RSS <- sum(residuals(lm_model)**2)
  
  # Estimation de la variance des erreurs à partir du modèle complet
  sigma_hat2 <- summary(lm_full)$sigma**2
  
  # Calcul de Cp de Mallows
  Cp <- RSS / sigma_hat2 - (n - 2 * p)
  
  return(Cp)
}
modele_full <- lm(
  maxO3 ~ T9 + T12 + T15 + Ne9 + Ne12 + Ne15 + Vx9 + Vx12 + Vx15 + maxO3v,
  data = data_ozone_q8
)
tibble::tibble(
  `Critère` = c("AIC", "BIC", "Cp de Mallows", "R²-adj"),
  `Modèle Q5` = c(
    AIC(modele_q5),
    BIC(modele_q5),
    cp_mallows(modele_q5,modele_full),
    summary(modele_q5)$adj.r.squared
  ),
  `Modèle Q9` = c(
    AIC(modele_q9),
    BIC(modele_q9),
    cp_mallows(modele_q9, modele_full),
    summary(modele_q9)$adj.r.squared
  )
)
```
:::

Quel que soit le critère le modèle avec l’introduction de la variable
$\texttt{maxO3v}$ est meilleur.
