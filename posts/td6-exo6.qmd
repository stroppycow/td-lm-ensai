---
title: "TD 6 - Exercice 6 - Fourmis"
lang: fr
author: "Théo Leroy"
date: "19 novembre 2024"
format:
  live-html:
    code-background: true
    toc: true
    page-layout: full
webr:
  render-df: gt-interactive
  resources:
    - ./../data/Fourmis.txt
  packages:
      - dplyr
      - readr
      - ggplot2
      - gridExtra
      - tidyr
      - MASS
editor: 
  markdown: 
    wrap: 72
---


## Question 1

On charge les données du fichier `Fourmis.txt` en R sous forme de
`data.frame`.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
data_fourmis <- read.csv(
  file = 'data/Fourmis.txt',
  sep = ",",
  header = TRUE,
  colClasses = c("integer", "numeric", "factor", "factor")
)
data_fourmis
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
data_fourmis <- readr::read_delim(
  file = "data/Fourmis.txt",
  col_types = readr::cols(
    readr::col_integer(),
    readr::col_number(),
    readr::col_factor(level = c("FLWT", "FTWT", "GPWT", "INWT")),
    readr::col_factor(level = c("Dry", "Wet"))
  ),
  delim = ","
)
data_fourmis
```
:::

La variable `Effectifs` correspondant au nombre d'espèces différentes de
fourmis dans l'échantillon prélevé est une variable de comptage. On
l'importe comme `integer`.

La variable `Weight` contient le poids des échantillons.C'est une
variable quantitative, on l'importe en `numeric`.

La variable `Site` indique la provenance des différents échantillons
(`GPWT` : forêt de plateau, `FLWT` forêt de lianes, `FTWT` forêt de
transition, et `INWT` forêt d'Iselberg). C'est une variable
catégorielle. On l'importe en `factor`.

La variable `Conditions` nous renseigne sur les conditions de recueil de
l'échantillon. C'est une variable catégorielle avec deux modalités :
`Dry` (sec) et `Wet` (humide) qu'on importe donc en `factor`.



## Question 2

### Lien entre `Weight` et `Effectifs`

::: {.panel-tabset group="language"}
#### Base R

```{webr}
#| envir: baser
#| autorun: true
plot(
  x = data_fourmis$Weight,
  y = data_fourmis$Effectifs, 
  xlab = "Poids de l'échantillon", 
  ylab = "Nombre d'espèces différentes",
)
grid()
```

#### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
ggplot2::ggplot(
  data = data_fourmis,
  mapping = ggplot2::aes(x = Weight, y = Effectifs)
) +
  ggplot2::geom_point() +
  ggplot2::labs(
    x = "Poids de l'échantillon",
    y = "Nombre d'espèces différentes"
  ) +
  ggplot2::theme_light() 
```
:::

Ce nuage de point ne permet pas de mettre en évidence un lien entre le
poids de l'échantillon et l'effectif de fourmis présent.

::: {.panel-tabset group="language"}
#### Base R

```{webr}
#| envir: baser
#| autorun: true
par(mfrow = c(2,2))
lapply(
  X = levels(data_fourmis$Site),
  FUN = function(site){
    plot(
      x = data_fourmis[data_fourmis$Site == site, "Weight"],
      y = data_fourmis[data_fourmis$Site == site, "Effectifs"],
      xlab = "Poids de l'échantillon", 
      ylab = "Nombre d'espèces différentes",
      main = site
    )
    grid()
  }
) |> invisible()
```

#### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
par(mfrow = c(2,2))
g <- lapply(
  X = levels(data_fourmis$Site),
  FUN = function(site){
    ggplot2::ggplot(
      data = data_fourmis |> dplyr::filter(Site == site),
      mapping = ggplot2::aes(x = Weight, y = Effectifs, main = site)
    ) +
      ggplot2::geom_point() +
      ggplot2::labs(
        x = "Poids de l'échantillon",
        y = "Nombre d'espèces différentes"
      ) +
      ggplot2::ggtitle(label= site) + 
      ggplot2::theme_light() 
  }
)
gridExtra::grid.arrange(grobs = g, layout_matrix = matrix(1:4, ncol = 2))
```
:::

En distinguant par type de forêt un lien croissant semble exister pour
les forêts `FLWT` et `GPWT`.

### Lien entre `Site` et `Effectifs`

::: {.panel-tabset group="language"}
#### Base R

```{webr}
#| envir: baser
#| autorun: true
boxplot(
  Effectifs ~ Site,
  data = data_fourmis,
  main = "Distribution du nombre d'espèces de fourmis en fonction du site de prélèvement"
)
```

#### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
ggplot2::ggplot(
  data = data_fourmis,
  mapping = ggplot2::aes(x = Site, y = Effectifs)
) +
  ggplot2::geom_boxplot() +
  ggplot2::labs(
    title = "Distribution du nombre d'espèces de fourmis en fonction du site de prélèvement"
  ) +
  ggplot2::theme_minimal()
```
:::

Un lien semble exister entre le type de forêt et le nombre d'espèces de
fourmis.

### Lien entre `Conditions` et `Effectifs`

::: {.panel-tabset group="language"}
#### Base R

```{webr}
#| envir: baser
#| autorun: true
boxplot(
  Conditions ~ Effectifs,
  data = data_fourmis,
  main = "Distribution du nombre d'espèces de fourmis en fonction des conditions de recueil"
)
```

#### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
ggplot2::ggplot(
  data = data_fourmis,
  mapping = ggplot2::aes(x = Conditions, y = Effectifs)
) +
  ggplot2::geom_boxplot() +
  ggplot2::labs(
    title = "Distribution du nombre d'espèces de fourmis en fonction des conditions de recueil"
  ) +
  ggplot2::theme_minimal()
```
:::

Aucune relation ne semble exister entre les conditions de recueil et le
nombre d'espèces de fourmis.



## Question 3

Le modèle log-linéaire de Poisson de la variables `Effectifs` en
fonction de toutes les variables à disposition s'écrit :

$$
\begin{align*}
\texttt{Effectifs}&|(\texttt{Weight}, \texttt{Site},\texttt{Conditions}) \sim \mathcal{P}(\lambda(\texttt{Weight}, \texttt{Site},\texttt{Conditions}))
\end{align*}
$$

avec

$$
\begin{align*}
\textrm{log}\left(\lambda(\texttt{Weight}, \texttt{Site},\texttt{Conditions})\right) = &\ \ \ \ \ 
\beta_0 \\ 
&+ \beta_1\texttt{Weight} \\
&+ \beta_2\textbf{1}_{\texttt{Site}=\texttt{FTWT}}+\beta_3\textbf{1}_{\texttt{Site}=\texttt{GPWT}}+\beta_4\textbf{1}_{\texttt{Site}=\texttt{INWT}} \\
&+ \beta_5\textbf{1}_{\texttt{Conditions}=\texttt{Wet}} \\
&+ \beta_6\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{FTWT}}+\beta_7\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{GPWT}}+\beta_8\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{INWT}} \\
&+ \beta_9\texttt{Weight}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}} \\
&+ \beta_{10}\textbf{1}_{\texttt{Site}=\texttt{FTWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}}+\beta_{11}\textbf{1}_{\texttt{Site}=\texttt{GPWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}}+\beta_{12}\textbf{1}_{\texttt{Site}=\texttt{INWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}} \\ 
&+ \beta_{13}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{FTWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}} +\beta_{14}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{GPWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}}+\beta_{15}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{INWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}}  \\
\end{align*}
$$

Il y a 16 paramètres à estimer.

On peut représenter la modélisation de
$\textrm{log}\left(\lambda(\texttt{Weight}, \texttt{Site},\texttt{Conditions})\right)$
dans un tableau à double entrée.

|   | $\texttt{Conditions}=\texttt{"Dry"}$ | $\texttt{Conditions}=\texttt{"Wet"}$ |
|------------------|---------------------|---------------------------------|
| $\texttt{Site}=\texttt{"FLWT"}$ | $\beta_0+\beta_1\texttt{Weight}$ | $\beta_0+\beta_5+(\beta_1+\beta_9)\texttt{Weight}$ |
| $\texttt{Site}=\texttt{"FTWT"}$ | $\beta_0+\beta_2+(\beta_1+\beta_{6})\texttt{Weight}$ | $\beta_0+\beta_2+\beta_5+\beta_{10}+(\beta_1+\beta_6+\beta_9+\beta_{13})\texttt{Weight}$ |
| $\texttt{Site}=\texttt{"GPWT"}$ | $\beta_0+\beta_3+(\beta_1+\beta_{7})\texttt{Weight}$ | $\beta_0+\beta_3+\beta_5+\beta_{11}+(\beta_1+\beta_7+\beta_9+\beta_{14})\texttt{Weight}$ |
| $\texttt{Site}=\texttt{"INWT"}$ | $\beta_0+\beta_4+(\beta_1+\beta_{8})\texttt{Weight}$ | $\beta_0+\beta_4+\beta_5+\beta_{12}+(\beta_1+\beta_8+\beta_9+\beta_{15})\texttt{Weight}$ |

On ajuste le modèle avec la fonction `glm`.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q3 <- glm(
  formula = Effectifs ~ Weight*Site*Conditions,
  family = poisson(),
  data = data_fourmis
)
summary(modele_q3)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q3 <- glm(
  formula = Effectifs ~ Weight*Site*Conditions,
  family = poisson(),
  data = data_fourmis
)
summary(modele_q3)
```
:::

Une analyse rapide des résultats de la sortie donnée par la fonction
`summary` met en évidence de nombreux coefficients non significatifs.
Cependant, l’interaction triple semblerait pertinente car certains
coefficients associés sont significatifs au seuil 5 %. Ainsi, le
coefficient associé à la variable `Weight` ne varie pas de manière
significative lorsqu’on considère uniquement le site ou les conditions
séparément (cf. interactions doubles) mais il semble varier quand on
prend en compte à la fois `Site` et `Conditions`.



## Question 4

On met en place les différentes procédure de sélction demandées

**Backward avec l'AIC**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q4_sel_backward_aic <- step(
  object = modele_q3,
  trace = 0,
  direction = "backward"
)
summary(modele_q4_sel_backward_aic)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q4_sel_backward_aic <- step(
  object = modele_q3,
  trace = 0,
  direction = "backward"
)
summary(modele_q4_sel_backward_aic)
```
:::

**Backward avec le BIC**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q4_sel_backward_bic <-step(
  object = modele_q3,
  trace = 0,
  direction = "backward",
  k = log(nrow(data_fourmis))
)
summary(modele_q4_sel_backward_bic)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q4_sel_backward_bic <- step(
  object = modele_q3,
  trace = 0,
  direction = "backward",
  k = log(nrow(data_fourmis))
)
summary(modele_q4_sel_backward_bic)
```
:::

**Foreward avec l'AIC**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q4_sel_forward_aic <- step(
  object = glm(
    formula = Effectifs ~ 1,
    family = poisson(),
    data = data_fourmis
  ),
  scope = list(upper = Effectifs ~ Weight*Site*Conditions),
  trace = 0,
  direction = "forward"
)
summary(modele_q4_sel_forward_aic)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q4_sel_forward_aic <- step(
  object = glm(
    formula = Effectifs ~ 1,
    family = poisson(),
    data = data_fourmis
  ),
  scope = list(upper = Effectifs ~ Weight*Site*Conditions),
  trace = 0,
  direction = "forward"
)
summary(modele_q4_sel_forward_aic)
```
:::

**Foreward avec le BIC**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q4_sel_forward_bic <- step(
  object = glm(
    formula = Effectifs ~ 1,
    family = poisson(),
    data = data_fourmis
  ),
  scope = list(upper = Effectifs ~ Weight*Site*Conditions),
  trace = 0,
  direction = "forward",
  k = log(nrow(data_fourmis))
)
summary(modele_q4_sel_forward_bic)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q4_sel_forward_bic <- step(
  object = glm(
    formula = Effectifs ~ 1,
    family = poisson(),
    data = data_fourmis
  ),
  scope = list(upper = Effectifs ~ Weight*Site*Conditions),
  trace = 0,
  direction = "forward",
  k = log(nrow(data_fourmis))
)
summary(modele_q4_sel_forward_bic)
```
:::

**Synthèse**

On compare les modèles sélectionnés :

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
data.frame(
  `Méthode` = c("Backward", "Backward", "Forward", "Forward"),
  `Critère` = c("AIC", "BIC", "AIC", "BIC"),
  `Formula` = c(
    strsplit(toString(modele_q4_sel_backward_aic$call), ",")[[1]][2],
    strsplit(toString(modele_q4_sel_backward_bic$call), ",")[[1]][2],
    strsplit(toString(modele_q4_sel_forward_aic$call), ",")[[1]][2],
    strsplit(toString(modele_q4_sel_forward_bic$call), ",")[[1]][2]
  ),
  AIC = c(
    AIC(modele_q4_sel_backward_aic),
    AIC(modele_q4_sel_backward_bic),
    AIC(modele_q4_sel_forward_aic),
    AIC(modele_q4_sel_forward_bic)
  ),
  BIC = c(
    BIC(modele_q4_sel_backward_aic),
    BIC(modele_q4_sel_backward_bic),
    BIC(modele_q4_sel_forward_aic),
    BIC(modele_q4_sel_forward_bic)
  )
)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
data.frame(
  `Méthode` = c("Backward", "Backward", "Forward", "Forward"),
  `Critère` = c("AIC", "BIC", "AIC", "BIC"),
  `Formula` = c(
    strsplit(toString(modele_q4_sel_backward_aic$call), ",")[[1]][2],
    strsplit(toString(modele_q4_sel_backward_bic$call), ",")[[1]][2],
    strsplit(toString(modele_q4_sel_forward_aic$call), ",")[[1]][2],
    strsplit(toString(modele_q4_sel_forward_bic$call), ",")[[1]][2]
  ),
  AIC = c(
    AIC(modele_q4_sel_backward_aic),
    AIC(modele_q4_sel_backward_bic),
    AIC(modele_q4_sel_forward_aic),
    AIC(modele_q4_sel_forward_bic)
  ),
  BIC = c(
    BIC(modele_q4_sel_backward_aic),
    BIC(modele_q4_sel_backward_bic),
    BIC(modele_q4_sel_forward_aic),
    BIC(modele_q4_sel_forward_bic)
  )
)
```
:::

On garderait donc le modèle général (celui de la question 3) selon AIC
et le modèle le plus simple `Site+Weight` selon le BIC.



## Question 5

On peut découper le combinaison de paramétrage pour l'ordonnée à
l'origine et pour la pente associée à la variable `Weight`. L'ensemble
des combinaisons possibles de sous-modèle sera ainsi le produit
cartésien de ces deux sous ensembles.

**Choix pour l'ordonnée à l'origine**

Il y a 5 possibilités pour l'ordonnée à l'origine pour un modèle avec
une constante.

-   Une constante unique : `1`
-   Une constante par type de forêt : `Site`
-   Une constante selon les conditions de recueil : `Conditions`
-   Une constante qui additionne l'effet du type de forêt et les
    conditions de recueil : `Site + Conditions`
-   Une constante par croisement du type de forêt et conditions de
    recueil : `Site:Conditions`

**Choix pour la pente associée à la variable `weight`**


-   Pente nulle qui signifie l'absence d'effet du poids de l'échantillon     : `0*Weight`
-   Une pente unique : `Weight`
-   Une pente type de forêt : `Weight:Site`
-   Une pente selon les conditions de recueil : `Weight:Site`
-   Une pente qui additionne l'effet du type de forêt et les conditions
    de recueil : `Weight:Site + Weight:Conditions`
-   Une pente par croisement du type de forêt et conditions de recueil :
    `Weight:Site:Conditions`

Il y a donc $5 \times 6 = 30$ modèles possibles.

::: {.callout-note collapse="true"}
### Compléments : Implémentation de la recherche exhaustive

On pourrait implémenter soi-même la recherche exhaustive avec quelques
lignes de codes en R. Ce n'est pas immédiat et donc pas demandé dans
l'exercice.

```{webr}
#| envir: baser
#| autorun: true
data_combinaisons <- expand.grid(list(
  constante = c("1", "Site", "Conditions", "Site + Conditions", "Site:Conditions"),
  pente = c("0*Weight", "Weight" ,"Weight:Site", "Weight:Conditions", "Weight:Site + Weight:Conditions", "Weight:Site:Conditions")
))
combinaisons <- paste0(
  "Effectifs ~ ",
  data_combinaisons$constante,
  " + ",
  data_combinaisons$pente
)

lapply(
  X = combinaisons,
  FUN = function(x){
    estimation <-  glm(formula = x, family = poisson(), data = data_fourmis)
    data.frame(formula = x, AIC = AIC(estimation), BIC = BIC(estimation))
  }
) |> do.call(what = rbind.data.frame)
```
:::



## Question 6

On estime le meilleur modèle log-linéaire de Poisson au sens du BIC et
de l'AIC.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q6 <- glm(
  formula = Effectifs ~ Weight:Site:Conditions,
  family = poisson(),
  data = data_fourmis
)
summary(modele_q6)
BIC(modele_q6)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q6 <- glm(
  formula = Effectifs ~ Weight:Site:Conditions,
  family = poisson(),
  data = data_fourmis
)
summary(modele_q6)
BIC(modele_q6)
```
:::

On obtient AIC=1008 et BIC=1036.6, qui sont bien plus faibles que ceux
des modèles retenus par sélection stepwise.


## Question 7

On adopte la même démarche. On estime d'abord le modèle avec le plus de
termes. On utilise la fonction `glm.nb` du package `MASS`.

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q7 <- MASS::glm.nb(
  formula = Effectifs ~ Weight*Site*Conditions,
  data = data_fourmis
)
summary(modele_q7)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q7 <- MASS::glm.nb(
  formula = Effectifs ~ Weight*Site*Conditions,
  data = data_fourmis
)
summary(modele_q7)
```
:::

Avec ce modèle, l’interaction triple semble également significative. On
obtient AIC=992 et BIC=1046, ce qui est inférieur à l’AIC et au BIC du
modèle de Poisson avec interaction triple (AIC=1010 et BIC=1061).

Ce résultat est encourageant et nous incite à chercher le meilleur
sous-modèle possible.



## Question 8

::: {.callout-note collapse="true"}
### Complément : Implémentation de la recherche exhaustive

On pourrait à nouveau implémenter soi-même la recherche exhaustive avec
quelques lignes de codes en R pour retrouver le résultat de l'énoncé. Ce
n'est toujours pas immédiat.

```{webr}
#| envir: baser
#| autorun: true
lapply(
  X = combinaisons,
  FUN = function(x){
    estimation <-  glm.nb(formula = x, data = data_fourmis)
    data.frame(formula = x, AIC = AIC(estimation), BIC = BIC(estimation))
  }
) |> do.call(what = rbind.data.frame)
```
:::

**Modèle binomial négatif sélectionné par l'AIC**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q8_best_aic <- MASS::glm.nb(
  formula = Effectifs ~ 1 + Weight:Site:Conditions,
  data = data_fourmis
)
summary(modele_q8_best_aic)
BIC(modele_q8_best_aic)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q8_best_aic <- MASS::glm.nb(
  formula = Effectifs ~ 1 + Weight:Site:Conditions,
  data = data_fourmis
)
summary(modele_q8_best_aic)
BIC(modele_q8_best_aic)
```
:::

Son AIC vaut 986 et son BIC 1018.

**Modèle binomial négatif sélectionné par le BIC**

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
modele_q8_best_bic <- MASS::glm.nb(
  formula = Effectifs ~ 1 + Weight:Site,
  data = data_fourmis
)
summary(modele_q8_best_bic)
BIC(modele_q8_best_bic)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
modele_q8_best_bic <- MASS::glm.nb(
  formula = Effectifs ~ 1 + Weight:Site,
  data = data_fourmis
)
summary(modele_q8_best_bic)
BIC(modele_q8_best_bic)
```
:::

Son AIC vaut 997 et son BIC 1016.

Evidemment l’AIC du premier est inférieur à celui du second, et
inversement pour le BIC.



## Question 9

Le meilleur modèle de Poisson au sens de l’AIC et du BIC dépend de
`Weight:Site:Conditions`. Il fait donc intervenir les conditions
d’humidité.

Le meilleur modèle binomial négatif au sens de l’AIC fait intervenir les
mêmes variables. Celui au sens du BIC fait intervenir `Weight:Site` et
ne dépend pas des conditions.

En comparant, le modèle de Poisson avec `Weight:Site:Conditions` et le
modèle binomial négatif avec les mêmes variables : les critères AIC et
BIC nous conduisent tous deux au second choix : le meilleur modèle
binomal négatif au sens de l'AIC.




## Question 10

Le modèle sélectionné de la variables s'écrit :

$$
\begin{align*}
\texttt{Effectifs}&|(\texttt{Weight}, \texttt{Site},\texttt{Conditions}) \sim NB(\lambda(\texttt{Weight}, \texttt{Site},\texttt{Conditions}), \theta)
\end{align*}
$$

avec

$$
\begin{align*}
\textrm{log}\left(\lambda(\texttt{Weight}, \texttt{Site},\texttt{Conditions})\right) = &\ \ \ \ \ 
\beta_0 \\ 
&+\beta_{1}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{FLWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Dry}}  \\
&+\beta_{2}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{FTWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Dry}}  \\
&+\beta_{3}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{GPWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Dry}} \\
&+\beta_{4}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{INWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Dry}} \\
&+\beta_{5}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{FLWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}}  \\
&+\beta_{6}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{FTWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}}  \\
&+\beta_{7}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{GPWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}} \\
&+\beta_{8}\texttt{Weight}\textbf{1}_{\texttt{Site}=\texttt{INWT}}\textbf{1}_{\texttt{Conditions}=\texttt{Wet}} \\
\end{align*}
$$

On estime que $\theta$ par $\hat{\theta}\approx 16,25$

On peut représenter les estimations de
$\lambda(\texttt{Weight}, \texttt{Site},\texttt{Conditions})$ dans un
tableau à double entrée.

|   | $\texttt{Conditions}=\texttt{"Dry"}$ | $\texttt{Conditions}=\texttt{"Wet"}$ |
|------------------|---------------------------|---------------------------------|
| $\texttt{Site}=\texttt{"FLWT"}$ | $\exp(1.761+0.101\texttt{Weight})$ | $\exp(1.761+0.099\texttt{Weight})$ |
| $\texttt{Site}=\texttt{"FTWT"}$ | $\exp(1.761+0.048\texttt{Weight})$ | $\exp(1.761+0.010\texttt{Weight})$ |
| $\texttt{Site}=\texttt{"GPWT"}$ | $\exp(1.761+0.034\texttt{Weight})$ | $\exp(1.761+0.048\texttt{Weight})$ |
| $\texttt{Site}=\texttt{"INWT"}$ | $\exp(1.761+0.063\texttt{Weight})$ | $\exp(1.761+0.109\texttt{Weight})$ |

: Estimations de $\lambda(\texttt{Weight}, \texttt{Site},\texttt{Conditions})$



## Question 11

On réalise une prédiction pour `Weight=10`, `Site="INWT"` et `Conditions="Dry"` afin d'obtenir les valeur de la moyenne `\lambda` de la loi binomiale négative avec la fonction `predict`.

La probabilité d’observer plus de 15 espèces s’obtient ensuite grâce à la fonction de répartition d’une loi binomiale négative sous R (fonction `pnbinom`) dans laquelle $\lambda$ joue le
rôle de la moyenne `mu` et $\theta$ joue le rôle de la taille d’échantillon `size`. 


::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
lambda <- predict(
  object = modele_q8_best_aic,
  newdata = data.frame(Site="INWT",Conditions="Dry",Weight=10),
  type = "response"
)
1-pnbinom(q = 14, size = modele_q8_best_aic$theta, mu = lambda)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
lambda <- predict(
  object = modele_q8_best_aic,
  newdata = data.frame(Site="INWT",Conditions="Dry",Weight=10),
  type = "response"
)
1-pnbinom(q = 14, size = modele_q8_best_aic$theta, mu = lambda)
```
:::

Cette probabilité est de 0.19.

Pour  `Weight=10`, `Site="INWT"` et `Conditions="Wet"`, 

::: {.panel-tabset group="language"}
### Base R

```{webr}
#| envir: baser
#| autorun: true
lambda <- predict(
  object = modele_q8_best_aic,
  newdata = data.frame(Site="INWT",Conditions="Wet",Weight=10),
  type = "response"
)
1-pnbinom(q = 14, size = modele_q8_best_aic$theta, mu = lambda)
```

### Tidyverse

```{webr}
#| envir: tdv
#| autorun: true
lambda <- predict(
  object = modele_q8_best_aic,
  newdata = data.frame(Site="INWT",Conditions="Wet",Weight=10),
  type = "response"
)
1-pnbinom(q = 14, size = modele_q8_best_aic$theta, mu = lambda)
```
:::

la probabilité est de 0.66.
